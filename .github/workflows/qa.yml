name: qa

on:
  push:
    branches:
      - qa

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*]
        docker-repository: [powerfulyang/qa.powerfulyang.com]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: setup env
        run: mv .env.qa .env
      - name: Install packages
        run: npm ci
      - name: Build
        run: npm run build
      - name: Dockerize
        id: dockerize
        uses: elgohr/Publish-Docker-Github-Action@3.04
        with:
          name: ${{ matrix.docker-repository }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: 'latest'
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            docker pull ${{ matrix.docker-repository }}
            cd ~/applications
            docker-compose up -d --force-recreate powerfulyang.com
            docker image prune -a -f
